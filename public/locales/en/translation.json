{
    "app_title": "Yevhenii Airapetian - Portfolio",
    "languages": "Languages",
    "welcome text": "Hi, I'm Yevhenii!",
    "resume": "Resume",
    "introduction":"I'm a web developer passionate about technology",
    "experience":"With previous experience in teaching foreign languages and academic writing, I'm excited to pursue a career as a web developer.",
    "first focus":"I have always focused on delivering high-quality work that met deadlines, employing my refined problem-solving, time-management, and logical thinking skills.",
    "second focus":"My focus is to combine my expertise with my professional aspirations to help create functional, responsive, and accessible software solutions.",
    "availability":"I'm available for on-site and hybrid employment in the Berlin and Potsdam area or remotely.",
    "hobbies":"In addition to my passions in web development, I'm also an active hobby photographer and fitness enthusiast, and any other day you can find me outside taking photos or lifting heavy weights.",
    "code":"Code",
    "projects":"Projects",
    "projectsInfo":"Here you will find the current web development projects that I completed and worked on. All of them have hyperlinks to the codebase and the project cases, most have a link to the deployed version, and some also have additional links.",
    "projectsViewTip":"Use the slider controls to click through the projects list. Hover over a specific slide to access the project's links",
    "r3playInfo":"The front end of the R3play Web API that allows users to register and deregister, view information about movies, TV series, and anime, and manage their favorites list.",
    "r3playAPIInfo":"A Web API developed with Node.js, Express, and MongoDB, allowing users to register, deregister, view information about movies, TV series, and anime, and manage favorites.",
    "myFlixInfo":"A front-end part for the R3play Web API designed with Angular, Typescript, and Material UI allowing users to register, view information about movies, and add favorites.",
    "meetInfo":"A Progressive Web App written with AWS Lambda functions that employs OAuth2 authorization and authentication and displays events from CareerFoundry's Google Calendar API.",
    "owriteInfo":"A React Native application that allows users to chat. Users can set a username, choose the chat background color, and send text messages, pictures, and audio recordings.",
    "pokemonInfo":"A responsive Pokemon App fetching Pokemon with Ajax from an external Pokedex API and displaying their info such as Pokemon height, weight, ID, and front and back images",
    "toDoInfo":"A jQuery and Bootstrap to-do app that allows users to manage to-dos. Users can add, delete, and rearrange to-dos, create and delete to-do lists, and see a guide on how to use the app.",
    "projectsSliderMore":"More",
    "testimonials":"Word of Mouth",
    "wordOfMouth":"I would not be where I am today without all the wonderful people I've had the privilege to work with.",
    "testimonialsViewTip":"Use the slider controls to click through the testimonials list. Hover over the testimonials' headings to read more.",
    "testimonial1":"Maya Septriana, Career Consultant, CareerFoundry",
    "testimonial2":"Nizar Triki, Software Engineering Manager chez Expensya",
    "testimonial3":"Dejan Gogov, Web Developer, Wild Code School",
    "testimonial1Text":"Yevhenii is someone that is so easy to collaborate with. He always strives for excellence. Every time I give him feedback he would be willing to listen and adjust the submission...",
    "testimonial2Text":"I had the opportunity to mentor Yevhenii throughout his web development training at CareerFoundry. Yevhenii's self-sufficiency, rapid grasp of concepts...",
    "testimonial3Text":"During our 6-month Fullstack bootcamp, Yevhenii consistently showed a positive and friendly demeanor. He approached tasks with determination...",
    "testimonialsMore":"More",
    "contact":"Contact",
    "suggestion":"Want to work together or have a suggestion? I'm open to recruitment opportunities and comments",
    "eMailMe":"Feel free to email me using the form below",
    "contactFormHeader":"Contact",
    "firstName":"First Name",
    "firstNamePlaceholder":"Joey",
    "lastName":"Last Name",
    "lastNamePlaceholder":"Tribbiani",
    "phoneNumber":"Phone Number",
    "phoneNumberPlaceholder":"+49 1234 5678910",
    "eMail":"E-Mail",
    "eMailPlaceholder":"example@mail.com",
    "messageOrComment":"Message or Comment. Please be nice!",
    "messageOrCommentPlaceholder":"Your Message",
    "contactFormTip":"Fields marked with an asterisk are required",
    "contactFormPoweredBy":"Powered by",
    "caseTDD":"Test-Driven Development",
    "caseServerAndApi":"Server-Side and API",
    "caseAgile":"Agile Workflow",
    "caseOverview":"Overview",
    "casePurpose":"Purpose and Context",
    "caseObjective":"Objective",
    "caseServer":"Server-Side",
    "caseClient":"Client-Side",
    "caseApproach":"Approach",
    "caseDuration":"Duration",
    "caseRetrospective":"Retrospective",
    "caseChallenges":"Challenges.",
    "caseConclusion":" Conclusion and Key Takeaways",
    "caseMainTakeaways":"Main takeaways for future projects",
    "apiPreview":"API Preview",
    "appPreview":"App Preview",
    "caseTechnologies":"Technologies used/Skills",
    "caseCredits":"Credits",
    "r3playCaseHeading":"R3play App Case Study",
    "r3playCaseIntroduction":"R3play is a web application, developed using the MERN stack, that provides users with information about movies, TV series, and anime. Users can access information about movies, directors, and genres. Users can create an account, update their information, and create a list of favorite movies, TV series, and anime.",
    "r3playCaseRequired":"R3play was a required project I developed as part of my full-stack immersion course at CareerFoundry to demonstrate my mastery of full-stack web development using JavaScript.",
    "r3playCaseAim":"The project aimed to develop a fully-functioning full-stack app that I could add to my professional portfolio. The problem I wanted to solve was to build the complete full-stack web application by connecting the previously designed server-side and the client-side for the application from scratch.",
    "r3playCaseAboutServer":"I developed a RESTful API using Node.js and Express, that interacts with a non-relational database (MongoDB). The API employs common HTTP methods like GET, PUT, POST, and DELETE. To retrieve data from and store data in the database, CRUD methods are used. The API provides movie, TV series, and anime information in JSON format.",
    "caseViewEndpoints":"View Endpoints",
    "r3playCasePostman":"I used Postman to test responses and requests to the API. I also made use of basic HTTP authentication and JWT authentication to provide for the authentication and authorization features.",
    "r3playCaseAboutClient":"After completing the API project, I proceeded to build the front-end interface users would need when interacting with the logic and data from the API and the database. It is a single-page, responsive web application, developed with React and React-Redux. It displays several interface views, including (but not limited to) a main view (shows a list of all movies, TV series, and anime), single movie, TV series, and anime views (shows data about a single movie, TV series, and anime, and allows users to add or delete them to or from their list of favorites), a login view, a registration view and a profile view (where users can update their user data and list of favorites).",
    "caseSliderTip":"Use the slider controls to click through the projects' list. Hover over the slides' headings to read more.",
    "r3playCaseDurationData":"12 weeks in total (backend: 7 weeks, frontend: 5 weeks)",
    "r3playCaseConclusionData":"The movie app was only the second full web application I developed in the Full-Stack web development course. When it was finished, I focused on enhancing my development skills, specifically the test-driven development approach. It requires implementing the testing phase before adding the actual functional logic, allowing for safer, bug-free, and quicker development.",
    
    
    
    "myFlixCaseHeading":"MyFlix App Case Study",
    "myFlixCaseIntroduction":"MyFlix-Angular-App is a web app, developed using the MEAN stack, that provides users with information about movies. Users can access information about movies, directors, and genres. Users can create an account, update their information, and create a list of favorite movies.",
    "myFlixCaseRequired":"MyFlix-Angular-App was a required project I developed as part of my full-stack immersion course at CareerFoundry to demonstrate my mastery of full-stack web development using JavaScript. Additionally, I practiced Agile project management, feedback providing, and documentation generation skills.",
    "myFlixCaseAboutServer":"I developed a RESTful API using Node.js and Express that interacts with a non-relational database (MongoDB). The API employs common HTTP methods like GET, PUT, POST, and DELETE. To retrieve data from and store data in the database, CRUD methods are used. The API provides movie, TV series, and anime information in JSON format.",
    "myFlixCasePostman":"I used Postman to test responses and requests to the API. I also made use of basic HTTP authentication and JWT authentication to provide for the authentication and authorization features.",
    "myFlixCaseAgileData":"The work on the project started with creating the Kanban board and filling it with the project requirements and user stories. When a project task was completed, it was moved to the \"Done\" section. As well, I generated detailed documentation with Typedoc as per the project's requirements.",
    "myFlixCaseAim":"The project aimed to develop a fully-functioning full-stack app that I could add to my professional portfolio. The problem I wanted to solve was to build the complete full-stack web application by connecting the previously designed server-side and the client-side for the application from scratch.",
    "myFlixCaseConclusion":"The myFlix app was the last full web application I developed in the Full-Stack web development course. When it was finished, I proceeded to enhance my portfolio.",
    "myFlixCaseAboutClient":"I built the front-end interface for users to be able to interact with the logic and data from the API and the database. It is a single-page, responsive web application, developed with Angular and Material UI. It displays several interface views, including a main view (shows a list of all movies, a button to manage favorites, and buttons to view additional movie information), a login/signup view, and a profile view (where users can update their user data).",
    "myFlixCaseConclusionData":"The myFlix app was the last full web application I developed in the Full-Stack web development course. When it was finished, I proceeded to enhance my portfolio.",
    "myFlixCaseConclusionData2":"The difficulties I encountered happened at the end of the project and related more to the peculiarities of Angular and Github. One issue occurred when Github pages refused to deploy the app for a long time. The other one happened when the local changes to the codebase didn't display in the deployed app. To troubleshoot this, I reached out to my mentor and tutor and, during a pair programming session, we managed to fix the problems.",
    "myFlixCaseConclusionData3":"It was also a useful experience in debugging and troubleshooting, using git terminal commands, specifics of working with Angular, and pair programming sessions. I also added new skills to my arsenal, such as Typescript, Angular, Material UI, proper code commenting, collaboration, and others.",
    "myFlixCaseDurationData":"Almost 1.5 weeks (10 days)",
    "myFlixCaseChallenge":"The development of the myFlix app took much less time and effort as compared to the R3play React app since:",
    "myFlixCaseChallengeDetail1":"The API has already been built",
    "myFlixCaseChallengeDetail2":"The extensive practice with React helped to progress faster",
    "myFlixCaseChallengeDetail3":"I didn't add many additional features and stick to the basic course requirements",
    "myFlixCaseChallengeDetail4":"The time left in the program was already limited",    
    "myFlixMainTakeaway1":"Improve the app's functionality to reflect the R3play app's features",
    "myFlixMainTakeaway2":"Research more about Typescript",
    "myFlixMainTakeaway3":"Read more about Material UI",
    "myFlixMainTakeaway4":"Continue exploring other technologies and best practices in web development",
    


    "meetCaseHeading":"Meet App Case Study",
    "meetCaseIntroduction":"Meet App is a responsive Progressive Web Application, developed using the test-driven development approach using the AWS Serverless Lambda functions, OAuth2 Google authentication and authorization screen, and the Recharts library to allow users to view the Google Calendar API events. Users can authenticate with Google, specify the city and number of events to display the events, and read more about them. The app can be installed on desktop/mobile thanks to the PWA recommendations, used both online and offline, and shows notifications when incorrect data is entered and/or the internet connection is lost.",
    "meetCaseRequired":"Meet App was a required project I developed as part of my full-stack immersion course at CareerFoundry to demonstrate my mastery of test-driven full-stack web development skills using JavaScript and serverless technologies.",
    "meetCaseAboutTDD":"I developed the application by first writing the user stories. With the help of the test-driven development approach, I incorporated the unit, integration, user acceptance, and end-to-end testing methods to write the required tests before implementing the code.",
    "meetCaseAboutServerAndApi":"I developed the server side using the AWS serverless Lambda functions as the requirement for the project. The use of serverless allows for the reduction of extra work for managing a server and makes scalability easier. For the app's events data, CareerFoundry's Google Calendar was used. The Google OAuth2 authentication screen was set up to authenticate and authorize users to the app. In the final stages of development, I made use of React's service worker to transform the app into a Progressive Web Application. The Recharts library allows the visualization of event data in the form of two types of charts (Scatter and Pie).",
    "meetCaseAim":"The project aimed to develop a fully-functioning full-stack app that I could add to my professional portfolio. The problem I wanted to solve was to build a complete full-stack web application by employing the test-driven development approach using the AWS serverless Lambda functions, React.js, and the Progressive Web App requirements.",
    "meetCaseConclusion":"The myFlix app was the last full web application I developed in the Full-Stack web development course. When it was finished, I proceeded to enhance my portfolio.",
    "meetCaseAboutClient":"For the visual part, the frontend was responsively styled with regular CSS and JSX.",
    "meetCaseConclusionData":"The Meet app was one of the last projects in the Full-Stack web development course. When it was finished, I focused on enhancing my React development skills, specifically by diving into a new topic - Native app development with React Native and Android Studio.",
    "meetCaseDurationData":"Almost 1 month (28 days)",
    "meetCaseChallenge1":"The biggest challenge for me in this project was the test-driven development approach itself. Having written code in the behavior-driven style before, I had to spend some time getting used to the new method. However, the work on the app went quite well and I got used to the new topic quickly. One of the issues while working on the project was the users' inability to authenticate to the app. After reaching out to my tutor, I solved the problem by adding manually the test users through the Google Developer console.",
    "meetCaseChallenge2":"After troubleshooting the app's installation on a smartphone, I successfully turned it into a Progressive Web App. I also enjoyed working with the user notifications and the Recharts library. I also improved my knowledge and skills of the TDD approach and setting up the AWS and Google Developer accounts, as well as confirming the domain's ownership.",    
    "meetMainTakeaway1":"Practice the TDD approach on side projects",
    "meetMainTakeaway2":"Discover more about data visualization",
    

    "notFound":"We couldn't find the resource you were looking for.",
    "returnHomeParagraph":"But you can always return to the ",
    "returnHomeLink":"home page",
    


    
    "TDDSkill":"Test-driven development",
    "kanbanSkill":"Kanban board",
    "agileSkill":"Agile workflow",
    "documentationSkill":"Documentation",
    "userStoriesSkill":"User stories",
    "collabSkill":"Collaboration",
    "feedbackSkill":"Providing feedback",
    "contributeSkill":"Contributing",
    "testingSkill":"Testing",
    "apiSkill":"Google Calendar API",
    "pwsSkill":"Progressive Web Apps",
    "responsiveSkill":"Responsive design",
    "deploySkill":"Deploying a website",
    "caseLead":"Role: Lead Developer",
    "caseTutor":"Tonny Ntambaazi:",
    "caseTutor2":"Creative Director",
    "caseMentor":"Nizar Triki:",
    "caseMentor2":"Software Engineering Manager",
    "r3playMainTakeaway1":"Focus on the required functionality first",
    "r3playMainTakeaway2":"Enhance the time-management skills",
    "r3playMainTakeaway3":"Deepen the knowledge of the used technologies by reading and practicing more",
    "r3playMainTakeaway4":"Not doubting to reach out for help in case of technical issues",
    "r3playCaseChallenge1":"The development of the backend side was the most time-consuming, while the work on the client side was the most challenging technically. As a result, it took me longer to complete the full stack as compared to the usual duration of two CareerFoundry achievements. The reason for this was that I concentrated on the functional and visual improvements of both achievements above the basic requirements, and needed more time to troubleshoot the conditional rendering of JSX elements, how to implement Redux in React, and the conditional logic behind rendering the movie suggestions to the user.",
    "r3playCaseChallenge2":"Nevertheless, this was my favorite project. I have enjoyed developing the user interface and working with database information. I also quickly enhanced my terminal skills, understanding of querying the MongoDB NoSQL database, conditional rendering, filtering data, customization of React Bootstrap components, as well as time-management and prioritization skills. Thankfully, my skilled tutor and mentor assisted me during the project and I was able to apply the gained skills later on when implementing additional features to the app.",
    
    
    
    
    "r3playSlide1Heading":"Login View",
    "r3playSlide2Heading":"Movie View",
    "r3playSlide3Heading":"Profile View",
    "r3playSlide1Description":"The R3play App login view where users can log in to the app",
    "r3playSlide2Description":"The R3play App movie view that displays a list of movies available in the app",
    "r3playSlide3Description":"The R3play App profile view where users can alter their account information",
    
    
    
    "menu":{
        "aboutMenu" : "About",
        "projectsMenu": "Projects", 
        "casesMenu": "Cases",
        "testimonialsMenu": "Testimonials",
        "contactMenu": "Contact",
        "resumeMenu": "Resume",
        "r3playMenu": "R3play App",
        "myFlixMenu": "MyFlix App",
        "meetMenu": "Meet App",
        "owriteMenu": "Owrite App",
        "pokemonMenu": "Pokemon App",
        "toDoMenu": "To Do App"
      },
     "footer":{
        "copy":"© Yevhenii Airapetian, 2024. All rights reserved.",
        "impressumFooter":"Imprint"
    },

    "aboutCvDeAlt":"An icon showing the German flag",
    "aboutCvEnAlt":"An icon showing the American flag",
    "aboutCvUkAlt":"An icon showing the Ukrainian flag",
    "aboutCvDeTitle":"Click here to download my resume in German. You might need to use a file viewer like Adobe Acrobat or similar",
    "aboutCvEnTitle":"Click here to download my resume in English. You might need to use a file viewer like Adobe Acrobat or similar",
    "aboutCvUkTitle":"Click here to download my resume in Ukrainian. You might need to use a file viewer like Adobe Acrobat or similar",
    "toggleResumeTitle":"Toggle resume files",
    "checkOutCodeTitle":"Check out code on Github",
    "profileImageAlt":"An image showing a man in a jacket"


  }
  